Literals
========
int		  	x		=		10;
datatype/keyword	name of variable/identifier	value of literal/constant value

Any constant value which can be assigned to a variable is called a Literal

For integral data types(byte,int,short,long),we can define literals in the form of
1)Decimal Literals(base-10)
===========================
int x=10->decimal form

2)Octal Form Literal(base-8)
============================
int x=010;(0 is appended in the left)(0-7)

3)Hexa Decimal Form Literal(base-16)
====================================
int x=0x10;(0-10,a-f) we can use both X and x

Questions
=========
int x=10(v)
int x=0786(iv) integer num too large
int x=0XFace(v)
int x=0XBeef(v)
int x=0XBeer(iv) R shouldnt be there

int x=10;
int y=010;
int z=0X10;
System.out.println(x+".."+y+".."+z);

Output:10..8..16

010=0*8^2+1*8^1+0*8^0=8
0X10=1*16^1+0*16^0=16


By default,default datatype is int. we can explicitly use long dt.

int x=10(v)
long l=10L(v)
int x=10L(iv)possible loss of precision
long l=10(v)[l=8 bytes,int 4 bytes(perfectly fit the data into l)

Floating Point Literals
=======================
By default, floating point numbers are double in Java. In order to store them into float variable, you need to cast them explicitly or suffix with 'f' or 'F'

float f=123.345-error(LOP, expected float,found double)
float f=123.345F(valid)
double f=123.345(valid)
double f=123.345D(valid)

Explicitly we can define double data type as D and d


double d=123.45(v)
double d=0123.45(v) because here it doesnt behave as octal considered as decimal
double d=0X123.45(iv)

We can define floating point literals in decimal and we cant specify in Octal and Hexadecimal

double d=0786;(iv).it behaves as octal since there is no decimal
double d=OxFace